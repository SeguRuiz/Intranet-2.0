services:
  # react:
  #   container_name: react-production
  #   image: react-production:prod
  #   build:
  #     context: ./intranet-frontend
  #     target: production
  #     args:
  #       - NODE_ENV=production
  #     dockerfile: Dockerfile.prod
  #   ports:
  #     - 80:80

  react:
    container_name: intranet_container_front
    image: intranet_image_front
    build:
      context: ./intranet-frontend
      
    volumes:
      - ./intranet-frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"

  django:
    container_name: intranet_container_back
    image: intranet_image_back
    build:
      context: ./intranet_backend
    ports:
      - "8000:8000"
    volumes:
      - ./intranet_backend:/app
    command:
      [
        "./wait-for-it.sh",
        "-t",
        "30",
        "mysql:3306",
        "--",
        "python",
        "manage.py",
        "runserver",
        "0.0.0.0:8000",
      ]
    depends_on:
      - mysql

  mysql:
    image: mysql:latest
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=intranet_db
    volumes:
      - intranet_data:/data/db
      - ./mysql-init:/docker-entrypoint-initdb.d:ro

volumes:
  intranet_data:
