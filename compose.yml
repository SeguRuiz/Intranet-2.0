services:
  frontend:
    container_name: intranet-front
    image: intranet-frontend:v2
    build:
      context: .
      target: production
      args:
        - NODE_ENV=production
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80"
    depends_on:
      - backend

  backend:
    container_name: intranet-back
    image: intranet-backend:v2
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://intranet_admin:sfcAZgrJ2m6OP1mxJL0cfLsfXoA5rEG7@dpg-cto47jrtq21c73crb0m0-a.oregon-postgres.render.com/intranet_db_slfe
    volumes:
      - ./intranet_backend:/app
    command:
      [
        "./wait-for-it.sh",
        "-t",
        "30",
        "postgres:5432",
        "--",
        "python",
        "manage.py",
        "runserver",
        "0.0.0.0:8000",
      ]
  

#   postgres:
#     image: postgres:latest
#     restart: always
#     ports:
#       - "5432:5432"
#     environment:
#       - POSTGRES_USER=intranet_admin
#       - POSTGRES_PASSWORD=fwd2025
#       - POSTGRES_DB=intranet_db
#     volumes:
#       - intranet_postgres_data:/var/lib/postgresql/data
#       - ./postgres-init:/docker-entrypoint-initdb.d:ro

# volumes:
#   intranet_postgres_data:
