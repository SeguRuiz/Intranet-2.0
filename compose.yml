services:
  frontend:
    container_name: intranet-front
    image: intranet-frontend:v2
    build:
      context: .
      target: production
      args:
        - NODE_ENV=production
      dockerfile: Dockerfile.frontend
    ports:
      - 80:80
    depends_on:
      - backend

  # Para desarrollo
  # react:
  #   container_name: intranet_container_front
  #   image: intranet_image_front
  #   build:
  #     context: ./intranet-frontend

  #   volumes:
  #     - ./intranet-frontend:/app
  #     - /app/node_modules
  #   ports:
  #     - "5173:5173"

  frontend:
    container_name: intranet-back
    image: intranet-backend:v2
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=mysql://root:root@db:3306/intranet_db
    volumes:
      - ./intranet_backend:/app
    command:
      [
        "./wait-for-it.sh",
        "-t",
        "30",
        "mysql:3306",
        "--",
        "python",
        "manage.py",
        "runserver",
        "0.0.0.0:8000",
      ]
    depends_on:
      - mysql

  mysql:
    image: mysql:latest
    restart: always
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=intranet_db
      - MYSQL_USER=intranet-admin
      - MYSQL_PASSWORD=fwd2025
    volumes:
      - intranet_data:/data/db
      - ./mysql-init:/docker-entrypoint-initdb.d:ro

volumes:
  intranet_data:
